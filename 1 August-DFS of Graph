class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    void dfs(int node,vector<bool> &vis,vector<int> &ans,vector<int> adj[]){
        ans.push_back(node);
        vis[node]=true;
        for(auto x:adj[node]){
            if(!vis[x])dfs(x,vis,ans,adj);
        }
    }
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        vector<int> ans;
        vector<bool> vis(V,false);
        for(int i=0;i<V;i++){
            if(!vis[i])dfs(i,vis,ans,adj);
        }
        return ans;
    }
};
